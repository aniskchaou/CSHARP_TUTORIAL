using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace c_sharp_tutorial
{

    Exception Classes in C#

//C# exceptions are represented by classes. The exception classes in C# are mainly directly or indirectly derived from the System.Exception class. 
//Some of the exception classes derived from the System.Exception class are the System.ApplicationException and System.SystemException classes.

//The System.ApplicationException class supports exceptions generated by application programs.Hence the exceptions defined by the programmers should derive
//from this class.

//The System.SystemException class is the base class for all predefined system exception.

        class DivNumbers
    {
        int result;

        DivNumbers()
        {
            result = 0;
        }
        public void division(int num1, int num2)
        {
            try
            {
                result = num1 / num2;
            }
            catch (DivideByZeroException e)
            {
                Console.WriteLine("Exception caught: {0}", e);
            }
            finally
            {
                Console.WriteLine("Result: {0}", result);
            }
        }
        static void Main(string[] args)
        {
            DivNumbers d = new DivNumbers();
            d.division(25, 0);
            Console.ReadKey();
        }
    }

    //The following table provides some of the predefined exception classes derived from the Sytem.SystemException class −

    //System.IO.IOException Handles I/O errors.


    //System.IndexOutOfRangeException Handles errors generated when a method refers to an array index out of range.


    //System.ArrayTypeMismatchException Handles errors generated when type is mismatched with the array type.


    //System.NullReferenceException Handles errors generated from referencing a null object.


    //System.DivideByZeroException Handles errors generated from dividing a dividend with zero.


    //System.InvalidCastException Handles errors generated during typecasting.


    //System.OutOfMemoryException Handles errors generated from insufficient free memory.


    //System.StackOverflowException Handles errors generated from stack overflow.


}
